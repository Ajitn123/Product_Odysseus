package Implementation;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.sql.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import javax.imageio.ImageIO;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.logging.LogEntries;
import org.openqa.selenium.logging.LogEntry;
import org.openqa.selenium.logging.LogType;
import org.openqa.selenium.logging.LoggingPreferences;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.Select;
import org.testng.Assert;
import org.testng.AssertJUnit;
import org.testng.Reporter;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;
import Utility.LocalCruiseUtils;
import ru.yandex.qatools.ashot.AShot;
import ru.yandex.qatools.ashot.Screenshot;
import ru.yandex.qatools.ashot.screentaker.ViewportPastingStrategy;


public class LocalBPCTest 
{
	  
	    LocalCruisebkngLoginpgobjct crsbkng;
	    LocalBPCBookingpgeobjct crsbkngpge;
	    LocalCruisePaymentpgeobjct hldncnfrm;
        public static WebDriver driver;
        Reporter report = new Reporter();

public static boolean implicitwait(long time)
{
  try 
  {
        driver.manage().timeouts().implicitlyWait(time, TimeUnit.SECONDS);
        System.out.println("Waited for"+time+"sec implicitly.");

  } catch (Exception e) 
    {
	             System.out.println(e.getMessage());
    }
          return true;
} 

@Parameters({ "browser" })
@BeforeTest
public void openBroswer(String browser) throws InterruptedException, IOException  
{
  try 
  {
        if (browser.equalsIgnoreCase("Firefox"))
        {
           //  driver = new FirefoxDriver();
	   
        } 
        else if (browser.equalsIgnoreCase("chrome")) 
        {
       	                System.setProperty("webdriver.chrome.driver", "D:\\Ajit\\Driver\\chromedriver_win32\\chromedriver.exe");
	                    DesiredCapabilities capabilities = DesiredCapabilities.chrome();
	                    LoggingPreferences loggingprefs = new LoggingPreferences();
	                    loggingprefs.enable(LogType.BROWSER, Level.ALL);
	                    capabilities.setCapability(CapabilityType.LOGGING_PREFS, loggingprefs);
	                    driver = new ChromeDriver(capabilities);
	                   
        }  
        else if (browser.equalsIgnoreCase("IE")) 
        {
	                   System.setProperty("webdriver.ie.driver", "D:\\Ajit\\Driver\\IEDriverServer_Win32_2.53.0\\IEDriverServer.exe");
	                   //driver = new InternetExplorerDriver();
	                   
        } 

  } catch (WebDriverException e) 
    {
          System.out.println(e.getMessage());
    }
   
 }
 
 @BeforeClass
 public void baseClass() throws InterruptedException, IOException  
 {
       	              
	 driver.manage().window().maximize();
     driver.get("https://localhost/odyssey/admin/login.aspx");
     Thread.sleep(2000);

     //Save console
     String testResultFile="D:\\Ajit\\Script_SS\\ConsoleError\\LocalBPCError.txt";
     File file = new File(testResultFile);  
     FileOutputStream fis = new FileOutputStream(file);  
     PrintStream out = new PrintStream(fis);  
     System.setOut(out); 
          
     Thread.sleep(1000);

     final Screenshot screenshot1 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
     final BufferedImage image1 = screenshot1.getImage();
     ImageIO.write(image1, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\1_Loginpage.png"));
     Thread.sleep(1000);
     
     String myArg1 = "D:\\Ajit\\Script_SS\\LocalBPC\\1_Loginpage.png";
     String myArg2 = "D:\\Ajit\\Script_SS\\LocalADC\\2_Searchpage.png";
     String myCommand = "D:\\Ajit\\Script_SS\\ImageCompConsole.exe";
     String Output = "D:\\Ajit\\Script_SS\\Difference.png";
     
     ProcessBuilder pb = new ProcessBuilder(myCommand, myArg1, myArg2, Output);
     pb.directory(new File("D:\\Ajit\\Script_SS"));
     Process p = pb.start();
   
     System.out.println("\n");
	 System.out.println("Searchpage Logs..");
	 System.out.println("\n");
	 ExtractJSLogs();
    
     Thread.sleep(4000);
     crsbkngpge = PageFactory.initElements(driver, LocalBPCBookingpgeobjct.class);
     crsbkng = PageFactory.initElements(driver, LocalCruisebkngLoginpgobjct.class);
     hldncnfrm = PageFactory.initElements(driver, LocalCruisePaymentpgeobjct.class);
      

}

public void ExtractJSLogs()
{
    LogEntries logEntries = driver.manage().logs().get(LogType.BROWSER);

      for (LogEntry entry : logEntries) 
      {
           System.out.println(new Date(entry.getTimestamp()) + " " + entry.getLevel() + " " + entry.getMessage());
      }
}

@Test(dataProvider="Authentications")
public void BPC_data(String sUsername, String sPassword, String Firstname_GuestOne, String Middlename_GuestOne, String Lastname_GuestOne, String Email, String Street_Address, String Cty, String Zpcode, String Phone, String Firstname_GuestTwo, String Middlename_GuestTwo, String Lastname_GuestTwo, String CardNo, String CardCvvNo, String CardHolderName, String Address, String City, String Zipcode, String Phone_Number, String BankName) throws Exception
{
	
	   try
     {
		    System.out.println("sUsername: " + sUsername);
	        System.out.println("sPassword: " + sPassword);
		    crsbkng.CruiseLoginToTittle(sUsername, sPassword);
		    
		     //For web site and booking details
            Reporter.log("Website Name :- Earl Website");
            Thread.sleep(200);
          
            Reporter.log("Affiliate Name :- BPC Latest Template");
            Thread.sleep(200);
		 
		     Reporter.log("Cruise line :- Royal Caribbean");
		     Thread.sleep(1500);
		     
	//	     Reporter.log("Cruise Ships :- Epic");
	//	     Thread.sleep(1500);
		     
  	       crsbkngpge.LocalBookingToTittle();
   	       
  	       final Screenshot screenshot4 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
           final BufferedImage image4 = screenshot4.getImage();
           ImageIO.write(image4, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\2_Searchpage.png"));
           Thread.sleep(3000);
           
           driver.findElement(By.id("CruiseSearchForm_OpenTarget")).click();
  	       Thread.sleep(1000);
  	       driver.findElement(By.xpath("//*[@id='CruiseSearchForm_tab2']/div[2]/div[3]/div/input")).click();
  	       Thread.sleep(3000);
          
  	       long start = System.currentTimeMillis();
  	     
  	       Thread.sleep(5000);
  	       long finish = System.currentTimeMillis();
           long totalTime = finish - start; 
           Reporter.log("Total Time for serch page to result page load(Milisec) - "+totalTime); 
           Thread.sleep(1000);
  	       System.out.println("\n");
	       System.out.println("Resultpage Logs..");
	       System.out.println("\n");
	       ExtractJSLogs();
	        
           Thread.sleep(1000);
         
   }
   catch(Exception e)
   {
  	         System.out.println("\n");
	         System.out.println("Time out or Invalid search criteria on resultpage Logs..");
	         System.out.println("\n");
	         ExtractJSLogs();
	 
	         final Screenshot screenshot33 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
	         final BufferedImage image33 = screenshot33.getImage();
	         ImageIO.write(image33, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\1_TimeoutORinvalidsearchdetails.png"));
	          
	         Assert.assertFalse(false, "FAIL");
	         Reporter.log("Time out or Invalid search criteria on resultpage..");
	         AssertJUnit.assertTrue("Time out or Invalid search criteria on resultpage...", crsbkngpge.isDisplayed());
	         throw(e);
   }
	
	   //For Select cruise from result page
       try
       {
    	         
                 driver.navigate().refresh();
                 
                 driver.get("https://localhost/odyssey/website/cruises/results.aspx?showtrace=true");
                  
                 Thread.sleep(4000);  
                 
                 final Screenshot screenshot4 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                 final BufferedImage image4 = screenshot4.getImage();
                 ImageIO.write(image4, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\3_Resultpage.png"));
             
                 Thread.sleep(6000);
          
                 driver.findElement(By.xpath("//*[@id='sr0']/div[2]/div[3]/div[2]/button[2]")).click();  // Select cruise i.e 0,1,2,3...10  from Result page                    
     
                 long start = System.currentTimeMillis();  
                 Thread.sleep(3000); 
  
                 System.out.println("\n");
                 System.out.println("Cruise detailspage Logs..");
                 System.out.println("\n");
                 ExtractJSLogs();              
                 Thread.sleep(1000);
                 long finish = System.currentTimeMillis();
                 long totalTime = finish - start; 
                 Reporter.log("Total Time for result page to details page load(Milisec) - "+totalTime); 
                 Thread.sleep(1000);
              
                   System.out.println("\n");
                   System.out.println("Cruise detailspage Logs..");
                   System.out.println("\n");
                   ExtractJSLogs();              
                   Thread.sleep(1000);
                
          }
          catch(Exception e)
          {
        	    final Screenshot screenshot80 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
	            final BufferedImage image80 = screenshot80.getImage();
	            ImageIO.write(image80, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\03_CruiseNotAvailablr.png"));
	          
    	        Assert.assertFalse(false, "FAIL");
    	        Reporter.log("Cruise not Available on detailspage...");
    	        AssertJUnit.assertTrue("Cruise not Available on detailspage...", crsbkngpge.isDisplayed());
    	        throw(e);
          }
               Thread.sleep(4000);
           
    
    //For the Cruise details page
    for(int i = driver.getWindowHandles().size() -1 ; i > 0 ; i--)
    {
              	    
    	    	 String winHandle = driver.getWindowHandles().toArray()[i].toString();

     	         driver.switchTo().window(winHandle);      
     	         
     	         driver.navigate().refresh();
     	         
     	         Thread.sleep(2000);
     	         
     	        final Screenshot screenshot60 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                final BufferedImage image60 = screenshot60.getImage();
                ImageIO.write(image60, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\4_Cruisedetailspage.png"));
                Thread.sleep(2000);
               
    try
    {
            	
               driver.findElement(By.id("_ctl0:MainContentsPH:_ctl0:_ctl1_GuestAge_1")).clear();
               Thread.sleep(100);
               driver.findElement(By.id("_ctl0:MainContentsPH:_ctl0:_ctl1_GuestAge_1")).click();
               Thread.sleep(100);
               driver.findElement(By.id("_ctl0:MainContentsPH:_ctl0:_ctl1_GuestAge_1")).sendKeys("24");
               Thread.sleep(300);
               driver.findElement(By.id("_ctl0:MainContentsPH:_ctl0:_ctl1_GuestAge_2")).clear();
               Thread.sleep(100);
               driver.findElement(By.id("_ctl0:MainContentsPH:_ctl0:_ctl1_GuestAge_2")).click();
               Thread.sleep(100);
               driver.findElement(By.id("_ctl0:MainContentsPH:_ctl0:_ctl1_GuestAge_2")).sendKeys("30");
               Thread.sleep(300);
               //For Country
               driver.findElement(By.xpath("//*[@id='_ctl0_MainContentsPH__ctl0__ctl1_ResidentCountry']")).click();
               Thread.sleep(500);
               driver.findElement(By.xpath("//*[@id='_ctl0_MainContentsPH__ctl0__ctl1_ResidentCountry']/option[5]")).click();
               Thread.sleep(800);
               driver.findElement(By.id("_ctl0_MainContentsPH__ctl0__ctl1_ResidentState")).click();
               Thread.sleep(500);
               driver.findElement(By.xpath("//*[@id='_ctl0_MainContentsPH__ctl0__ctl1_ResidentState']/option[3]")).click();
               Thread.sleep(800);
               driver.findElement(By.xpath("//*[@id='_ctl0_MainContentsPH__ctl0__ctl1_CategoryLNK']")).click();
               Thread.sleep(500);
               
               
    }
    catch(Exception e)
    {
                System.out.println("\n");
     	        System.out.println("Invalid guest information on cruise detailspage Logs..");
     	        System.out.println("\n");
     	        ExtractJSLogs();
      	 
 	            final Screenshot screenshot80 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
 	            final BufferedImage image80 = screenshot80.getImage();
 	            ImageIO.write(image80, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\3_InvalidGuestinformation.png"));
 	          
      	        Assert.assertFalse(false, "FAIL");
      	        Reporter.log("Invalid guest information's on detailspage...");
      	        AssertJUnit.assertTrue("Invalid guest information's on detailspage...", crsbkngpge.isDisplayed());
      	        throw(e);
     }
                 long start1 = System.currentTimeMillis();
                 System.out.println("\n");
     	         System.out.println("Categorypage Logs..");
     	         System.out.println("\n");
     	         ExtractJSLogs();
               
               Thread.sleep(8000);
               
               long finish1 = System.currentTimeMillis();
               long totalTime1 = finish1 - start1; 
               Reporter.log("Total Time for details page to category page load(Milisec) - "+totalTime1); 
               Thread.sleep(1000);
    
    
  // Verify error on category page
  try
  {
       if(driver.findElement(By.cssSelector("#_ctl0_PageHeadTD > div.content-area > div.top-error.error-box > div.top-error-bottom")).isDisplayed())
       {
    	   String err = driver.findElement(By.cssSelector("#_ctl0_PageHeadTD > div.content-area > div.top-error.error-box > div.top-error-bottom")).getText();
    	   Thread.sleep(1000);
    	   Reporter.log("Error message: " +err);
    	   Thread.sleep(500);
    	   
    	   final Screenshot screenshot82 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
           final BufferedImage image82 = screenshot82.getImage();
           ImageIO.write(image82, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\07_Error.png"));
           Thread.sleep(1000);
           AssertJUnit.assertTrue(" " +err, crsbkngpge.isDisplayed());
           return;
       }
  }
  catch(Exception e)
  {
	  e.getMessage();
  }
  
  try
  {
	  
       final Screenshot screenshot9 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
       final BufferedImage image9 = screenshot9.getImage();
       ImageIO.write(image9, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\5_Categorypage.png"));
       Thread.sleep(6000);
       
       WebElement viewcat = driver.findElement(By.cssSelector("[id*='IndividualCat-'] > div.col-md-4.catImg [class*='btn btn-default btn-block catDescBtn visible-md visible-lg']"));
       viewcat.click();
       Thread.sleep(5000);
       System.out.println("\n");
       System.out.println("View category info on categorypage Logs..");
       System.out.println("\n");
       ExtractJSLogs();
       Thread.sleep(2000);
       final Screenshot screenshot99 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
       final BufferedImage image99 = screenshot99.getImage();
       ImageIO.write(image99, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\6_Viewcategoryinfo.png"));
       Thread.sleep(5000);
       driver.findElement(By.cssSelector("[id*='IndividualCat-'] > div.col-md-4.catImg [class*='btn btn-default btn-block catDescBtn visible-md visible-lg']")).click();
       Thread.sleep(8000);
  
   
   try
   {
       //For price check on the category page
       String pricesoncat = driver.findElement(By.cssSelector("[id*='IndividualCat-'] > div.col-md-8.catFCrows > div:nth-child(2) > div > div.panel-body > div.col-xs-12.catFCrvp [class*='catFCfinCost']")).getText();
       System.out.println("Prices on category page is:- " +pricesoncat); 
       Reporter.log("Prices on category page is:- " +pricesoncat);
       Thread.sleep(4000);
   }
   catch(Exception e)
   {
    	  final Screenshot screenshot80 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
          final BufferedImage image80 = screenshot80.getImage();
          ImageIO.write(image80, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\4_Pricenotavailableoncategorypage.png"));
        
	      Assert.assertFalse(false, "FAIL");
	      Reporter.log("Price not availabe on category page...");
	      AssertJUnit.assertTrue("Price not availabe on category page...", crsbkngpge.isDisplayed());
	      throw(e);
    }	     
   
  // For open price tab..
   driver.findElement(By.cssSelector("[id*='IndividualCat-'] > div.col-md-8.catFCrows > div:nth-child(2) > div > div.panel-body > div.col-xs-12.catFCsub > div.col-md-4.no-padding.col-xs-12.pull-right [class*='price-button buttonStatus1']")).click();
   Thread.sleep(2000);
   
   // Switch to new window opened
   String winHandleBefore = driver.getWindowHandle();
   
   for(String winHandle1 : driver.getWindowHandles())
   {
       driver.switchTo().window(winHandle1);
   }
   
     final Screenshot screenshot63 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
     final BufferedImage image63 = screenshot63.getImage();
     ImageIO.write(image63, "PNG", new File("D:\\Ajit\\Script_SS\\OdysolCruise\\7_PriceonCategorypage.png"));
     Thread.sleep(5000); 
   
     // For verify price on category price tab..
      String priceoncategorypage = driver.findElement(By.cssSelector("#ody_FareType_AirTotal")).getText();
      Reporter.log("Price on category price tab:- " +priceoncategorypage);
      Thread.sleep(1000);
    
   // Close the new window
      driver.close();
      
      driver.switchTo().window(winHandleBefore);
   
   // Select Category
   driver.findElement(By.cssSelector("[id*='IndividualCat-'] > div.col-md-8.catFCrows > div:nth-child(2) > div > div.panel-body > div.col-xs-12.catFCsub [class*='btn btn-default btn-block']")).click();
   Thread.sleep(2000);
  
  //For handle pop up on category page
  if(driver.findElement(By.xpath("//button[@class='btn btn-block btn-default noteBtn']")).isDisplayed())
  {	
      
         driver.findElement(By.xpath("//button[@class='btn btn-block btn-default noteBtn']")).click(); //Handle popup on details page
         Thread.sleep(100);
       
  }
     
       Thread.sleep(3000);
       
}
catch(Exception e)
{
      System.out.println("Category not available..");
      System.out.println("\n");
      System.out.println("Category not available on categorypage Logs..");
      System.out.println("\n");
      ExtractJSLogs();

      final Screenshot screenshot10 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
      final BufferedImage image10 = screenshot10.getImage();
      ImageIO.write(image10, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\5_Categorynotavailable.png"));

      Assert.assertFalse(false, "FAIL");
      Reporter.log("Category not available..");
      AssertJUnit.assertTrue("Category not available...", crsbkngpge.isDisplayed());
      throw(e);
 }

     System.out.println("Category selected successfully..");


             Thread.sleep(5000);
             
             //For the Cruise details print on test report
             String crsline = driver.findElement(By.cssSelector("#sailingDetails > div > table > tbody > tr:nth-child(1) > td.sdInfo")).getText();
             Reporter.log("Cruise Line:- " +crsline);
             Thread.sleep(500);
             String length = driver.findElement(By.cssSelector("#sailingDetails > div > table > tbody > tr:nth-child(3) > td.sdInfo")).getText();
             Reporter.log("Length:- " +length);
             Thread.sleep(800);
             String shp = driver.findElement(By.cssSelector("#sailingDetails > div > table > tbody > tr:nth-child(2) > td.sdInfo")).getText();
             Reporter.log("Cruise Ship:- " +shp);
             Thread.sleep(500);
             String itinerary = driver.findElement(By.cssSelector("#sailingDetails > div > table > tbody > tr:nth-child(4) > td.p2")).getText();
             Reporter.log("Itinerary:- " +itinerary);
             Thread.sleep(400);
             String depart = driver.findElement(By.cssSelector("#sailingDetails > div > table > tbody > tr:nth-child(5) > td.sdInfo")).getText();
             Reporter.log("Departing:- " + depart);
             Thread.sleep(400);
             String Returning = driver.findElement(By.cssSelector("#sailingDetails > div > table > tbody > tr:nth-child(6) > td.sdInfo")).getText();
             Reporter.log("Returning:- " + Returning);
             Thread.sleep(400);
             String ctgory = driver.findElement(By.cssSelector("#sailingDetails > div > table > tbody > tr:nth-child(7) > td.sdInfo")).getText();
             Reporter.log("Category:- " + ctgory);
             Thread.sleep(400);
  
             //For check API, Office id And Test environment on cabin page
             String expr = driver.findElement(By.id("TracerBlock")).getText();
             String api = expr.split("OdysseyGateway")[7].split(":")[1].trim();
           //List<String> items = Arrays.asList(expr.split("$($('#TracerBlock')[0].innerHTML.split('OdysseyGateway')[2])[0].nodeValue.toString().split(':')[1]"));
             Reporter.log("API :- " +api);
             Thread.sleep(500);
             String envrnmnt = expr.split("OdysseyGateway")[7].split(":")[2].trim();
             Reporter.log("Environment :- " +envrnmnt);
             Thread.sleep(500);
             String officeid = expr.split("OdysseyGateway")[7].split(":")[3].trim();
             Reporter.log("Office Id :- " +officeid);
             Thread.sleep(3000);

     
     //For select cabin from the cabin selection page
     try
     {
    	            driver.findElement(By.cssSelector("#casCabins > div.panel-body > table > tbody.csIndvCab > tr:nth-child(2) > td [class*='btn btn-default btn-block']")).click();
                    Thread.sleep(1000);
     }
     catch(Exception e)
     {
                	      System.out.println("Cabin not available..");
                	      System.out.println("\n");
                	      System.out.println("Cabin not available on select cabinpage Logs..");
                	      System.out.println("\n");
                	      ExtractJSLogs();
                   
                          final Screenshot screenshot13 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                          final BufferedImage image13 = screenshot13.getImage();
                          ImageIO.write(image13, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\4_Cabinnotavailable.png"));
                   
                          Assert.assertFalse(false, "FAIL");
    	                  Reporter.log("Cabin not available..");
    			          AssertJUnit.assertTrue("Cabin not available...", crsbkngpge.isDisplayed());
    			          throw(e);
      }
                         long start3 = System.currentTimeMillis();
                         System.out.println("\n");
                         System.out.println("Search customer page Logs..");
                         System.out.println("\n");
                         ExtractJSLogs();              
                         Thread.sleep(1000);
               
                         final Screenshot screenshot102 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                         final BufferedImage image102 = screenshot102.getImage();
                         ImageIO.write(image102, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\8_Searchcustomerpage.png"));
       
                         System.out.println("Cabin selected successfully..");
               
                         Thread.sleep(4000);
                         long finish111 = System.currentTimeMillis();
                         long totalTime111 = finish111 - start3; 
                         Reporter.log("Total Time for cabin selection page to search customer page load(Milisec) - "+totalTime111); 
                         Thread.sleep(1000);
          
           // For the search customer page               
           try
           {
                driver.findElement(By.id("_ctl0_MainContent_fName")).sendKeys("monish");
                Thread.sleep(700);
                driver.findElement(By.id("_ctl0_MainContent_SearchBTN")).click();
                Thread.sleep(3000);
                driver.findElement(By.cssSelector("#_ctl0_MainContent_CustResults__ctl1_SelectLinkButton > img")).click();
                
           }
           catch(Exception e)
           {
          	 e.getMessage();
           }
           
                      long start04 = System.currentTimeMillis();
                      Thread.sleep(4000);
                      
                      System.out.println("\n");
                      System.out.println("Purchase page Logs..");
                      System.out.println("\n");
                      ExtractJSLogs();              
                      Thread.sleep(1000);
                      
                      long finish112 = System.currentTimeMillis();
                      long totalTime112 = finish112 - start04; 
                      Reporter.log("Total Time for search customer page to purchase page load(Milisec) - "+totalTime112); 
                      Thread.sleep(1000);
 
                      final Screenshot screenshot103 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                      final BufferedImage image103 = screenshot103.getImage();
                      ImageIO.write(image103, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\8_Purchasepage.png"));
                      Thread.sleep(2000);

                         //Check price on purchase page
                         String priceonpurchase= driver.findElement(By.cssSelector("#pricingBD > tbody > tr.pricingTotal.psGrTotal > td:nth-child(2) > strong")).getText();
                         System.out.println("Prices on purchase page is:- " +priceonpurchase);
                         Reporter.log("Prices on purchase page is:- " +priceonpurchase);
                         Thread.sleep(2000);
 
     
      //For Purchase page                 
       try
       {
              //      driver.findElement(By.xpath("//*[@id='_ctl0_MainContentsPH__ctl0_GroupPassID_2']")).click();
              //     Thread.sleep(1000);
              //     driver.findElement(By.xpath("//*[@id='_ctl0_MainContentsPH__ctl0_GroupPassID_2']/option[4]")).click();
              //      Thread.sleep(4000);
    	   
    	            Select select1 = new Select(driver.findElement(By.xpath("//*[@id='_ctl0_MainContentsPH__ctl0_GroupPassID_2']")));
		            select1.selectByVisibleText("LUTHRA, ANNA");
		            Thread.sleep(1000);
                    driver.findElement(By.xpath("//*[@id='_ctl0_MainContentsPH__ctl0_ContinueLNK']")).sendKeys(Keys.ENTER);
                                
       }
       catch(Exception e)
       {
                                System.out.println("Invalid guest information on purchase page, Please enter valid details for the required fields...");
                                System.out.println("\n");
                                System.out.println("Invalid guest information on purchasepage Logs..");
                                System.out.println("\n");
                                ExtractJSLogs();
                                         
                                final Screenshot screenshot34 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                                final BufferedImage image34 = screenshot34.getImage();
                                ImageIO.write(image34, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\5_InvalidGuestinfoonPurchasepage.png"));
                                         
                                Assert.assertFalse(false, "FAIL");
                          	    Reporter.log("Invalid guest information on purchase page, Please enter valid details for the required fields...");
                          		AssertJUnit.assertTrue("Invalid guest information on purchase page, Please enter valid details for the required fields....", crsbkng.isDisplayed());
                          		throw(e);
         }
                                
                                Thread.sleep(6000);           
                                System.out.println("\n");
                                System.out.println("Confirmationpage Logs..");
                                System.out.println("\n");
                                ExtractJSLogs();              
                                Thread.sleep(1000);
                                
                                final Screenshot screenshot44 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                                final BufferedImage image44 = screenshot44.getImage();
                                ImageIO.write(image44, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\9_Confirmationpage.png"));
                                                
                                Thread.sleep(2000);
                                
                                 
                                //For Verify price on confirmation page
                                String priceoncon = driver.findElement(By.cssSelector("#pricingBD > tbody > tr.pricingTotal.psGrTotal > td:nth-child(2) > strong")).getText();
                                Reporter.log("Price on confirmationpage is:- "+ priceoncon);
                                Thread.sleep(1000);
            try
            {
              	 if(driver.findElement(By.cssSelector("#InsurranceCHK_A905")).isDisplayed())
              	 {
              		   driver.findElement(By.cssSelector("#InsurranceCHK_A905")).click();
              		   Thread.sleep(3000);
              		 
              		   final Screenshot screenshot45 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                       final BufferedImage image45 = screenshot45.getImage();
                       ImageIO.write(image45, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\10_InsuranceApplied.png"));
                       Thread.sleep(2000);   
                       
                       String insuranceprice = driver.findElement(By.xpath("//*[@id='insSelect']/tbody/tr[1]/td[3]/span")).getText();
                       Reporter.log("Insurance Details:- " +insuranceprice);
                       Thread.sleep(1000);
                       
                       String afterinsu = driver.findElement(By.cssSelector("#pricingBD > tbody > tr.pricingTotal.psGrTotal > td:nth-child(2) > strong")).getText();
                       Reporter.log("After Applied insurance:- " +afterinsu);
                       Thread.sleep(2000);
                                    
                       
                       //Remove insurance
                 //      driver.findElement(By.id("InsurranceCHK_NON")).click();
                //       Thread.sleep(1000);
                //      Alert alert=driver.switchTo().alert();
               	//       alert.accept();
               	//       Thread.sleep(3000);
               	     
               	//      String afterremoveinsu = driver.findElement(By.xpath("//*[@id='PricesGTotal']")).getText();
                //      Reporter.log("After Removed insurance:- " +afterremoveinsu);
                //      Thread.sleep(1000);
                      
                //      final Screenshot screenshot46 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                //      final BufferedImage image46 = screenshot46.getImage();
                //     ImageIO.write(image46, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\11_InsuranceRemoved.png"));
                //     Thread.sleep(2000);
                         
              	 }
              	
              }catch(Exception e)
              {
              	e.getMessage();
              }
            
                           driver.findElement(By.id("AgreeTermsCON")).click();
                           Thread.sleep(1500);
                           // For click on Held booking button
                           if(envrnmnt.toLowerCase().trim().equals("test"))
                           {	 
                                driver.findElement(By.id("_ctl0_MainContentsPH__ctl0_HoldCruiseBTN")).click();
                                long start7 = System.currentTimeMillis();
                                
                                Thread.sleep(6000);
                                
                                long finish1112 = System.currentTimeMillis();
                                long totalTime1112 = finish1112 - start7; 
                                Reporter.log("Total Time for purchase page to confirmation(Payment) page load(Milisec) - "+totalTime1112); 
                                Thread.sleep(1000);
                           }   
                           
                   //For the verify held condition
                   try
                   {
                                   String status = driver.findElement(By.cssSelector("#finalizedInfo > p:nth-child(2) > strong")).getText(); 
                                              
                                   if(status.toLowerCase().trim().matches("held"))
                                   {
                                	    System.out.println("Status Pass..");
                                	    Assert.assertTrue(true, "PASS");
                                	    Reporter.log("Status Pass..");
                                   }
                                   else
                                   {
                                	    System.out.println("Status Fail b'coz status are differ to expected..");
                        				
                        				System.out.println("Actual status is:- "+ status);
                        				
                        	            final Screenshot screenshot5 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                        	   		    final BufferedImage image5 = screenshot5.getImage();
                        	   		    ImageIO.write(image5, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\5_HeldbookingFail.png"));
                        	            
                        	            Reporter.log("Actual status is:-" +status);
                        	            Assert.assertFalse(false, "FAIL");
                        	            Reporter.log("Status Fail b'coz status are differ to expected..");
                        			    AssertJUnit.assertTrue("Status Fail b'coz status are differ to expected...", crsbkngpge.isDisplayed());
                        			    return;
                        		     }
                                
                                      Reporter.log("Actual status is:- " + status);
                                 
                                       final Screenshot screenshot6 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                        		       final BufferedImage image6 = screenshot6.getImage();
                        		       ImageIO.write(image6, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\13_BookingHeld.png"));
                                 
                                       Reporter.log("Status held successfully..");
                                
                                System.out.println("\n");
                                System.out.println("Held Confirmation page Logs..");
                                System.out.println("\n");
                                ExtractJSLogs();              
                                Thread.sleep(1000);
                                
                                final Screenshot screenshot74 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                                final BufferedImage image74 = screenshot74.getImage();
                                ImageIO.write(image74, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\14_HeldConfirmationpage.png"));
                                Thread.sleep(4000);
                   }       
                    catch (Exception e) {
						// TODO: handle exception
                  	    e.getMessage();
					}            
                      try
                      {
                      	
                      	// Click on Full payment
                      	 driver.findElement(By.id("_ctl0_MainContentsPH__ctl0_ConfirmBkgBTN")).click();
                      	 long start77 = System.currentTimeMillis();  
                      	 Thread.sleep(7000);
                      	
                      	  long finish1114 = System.currentTimeMillis();
                          long totalTime1114 = finish1114 - start77; 
                          Reporter.log("Total Time for Held booking page to Payment page load(Milisec) - "+totalTime1114); 
                          Thread.sleep(1000);
                          
                          System.out.println("\n");
                          System.out.println("Payment page Logs..");
                          System.out.println("\n");
                          ExtractJSLogs();              
                          Thread.sleep(1000);
                          
                          final Screenshot screenshot74 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                          final BufferedImage image74 = screenshot74.getImage();
                          ImageIO.write(image74, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\15_Paymentpage.png"));
                          Thread.sleep(4000);
                      	
                      	// For Payment details
                          String priceonpaymnt = driver.findElement(By.cssSelector("#PayPrice")).getText();
                          Reporter.log("Price on paymentpage is:- "+ priceonpaymnt);
                                          
                            if(priceonpaymnt.equals(priceonpurchase))
                            {
                                         	
                                   System.out.println("Purchase and Payment page's Price matched");
                                   Reporter.log("Purchase and Payment page's Price matched..");
                                         	 
                                   System.out.println("Actual price is:- " +priceonpurchase);
         						   Reporter.log("Actual price is:- " +priceonpurchase);
                             }
                             else
                             {
         							  System.out.println("Purchase and Payment page's Price not match..");
         							  Reporter.log("Purchase and Payment page's Price not match..");
         							  System.out.println("Actual price is:- " +priceonpurchase);
         							  Reporter.log("Actual price is:- " +priceonpurchase);
         					   }
          							         
         							 Thread.sleep(1500);
         							 
         							 if(priceonpaymnt.equals(priceoncon))
                                   {
                                                	
                                          System.out.println("Confirmation and Payment page's Price matched");
                                          Reporter.log("Confirmation and Payment page's Price matched..");
                                                	 
                                           System.out.println("Actual price is:- " +priceoncon);
                						   Reporter.log("Actual price is:- " +priceoncon);
                                    }
                                    else
                                    {
                							  System.out.println("Confirmation and Payment page's Price not match..");
                							  Reporter.log("Confirmation and Payment page's Price not match..");
                							  System.out.println("Actual price is:- " +priceoncon);
                							  Reporter.log("Actual price is:- " +priceoncon);
                					 }
                 							         
                							 Thread.sleep(9000);	
                							 
                      }
                      catch(Exception e)
                      {
                      	  final Screenshot screenshot94 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                          final BufferedImage image94 = screenshot94.getImage();
                          ImageIO.write(image94, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\11_Paymentdetails.png"));
                  
                            Assert.assertFalse(false, "FAIL");
            	            Reporter.log("Something went wrong...");
            	            AssertJUnit.assertTrue("Something went wrong...", crsbkngpge.isDisplayed());
            	            throw(e);
                      }	
                      
                    try
                    {
                      	// For Payment details
                          System.out.println("CardNo: " + CardNo);
                          System.out.println("CardCvvNo: " + CardCvvNo);
                          System.out.println("CardHolderName: " + CardHolderName);
                          System.out.println("Address: " + Address);
                          System.out.println("City: " + City);
                          System.out.println("Zipcode: " + Zipcode);
                          System.out.println("Phone_Number: " + Phone_Number);
                     //   System.out.println("BankName: " + BankName);
                         
                          hldncnfrm.CruisePaymentToTitle(CardNo, CardCvvNo, CardHolderName, Address, City, Zipcode, Phone_Number, BankName);
                          long start78 = System.currentTimeMillis();  
                              
                              Thread.sleep(18000);
                              
                              long finish1117 = System.currentTimeMillis();
                              long totalTime1117 = finish1117 - start78; 
                              Reporter.log("Total Time for Payment page to Confirm booking page load(Milisec) - "+totalTime1117); 
                              Thread.sleep(1000);
                              
                              System.out.println("\n");
                              System.out.println("Confirm booking page Logs..");
                              System.out.println("\n");
                              ExtractJSLogs();              
                              Thread.sleep(1000);
                              
                           // For the verify confirm condition
                              String status1 = driver.findElement(By.cssSelector("#finalizedInfo > p:nth-child(2) > strong")).getText(); 
                                                
                              if(status1.toLowerCase().trim().matches("confirmed"))
                              {
                             	    System.out.println("Status Pass..");
                             	    Assert.assertTrue(true, "PASS");
                             	    Reporter.log("Status Pass..");
                              }
                              else
                              {
                             	     System.out.println("Status Fail b'coz status are differ to expected..");
                     				
                     				 System.out.println("Actual status is:- "+ status1);
                     		         final Screenshot screenshot9 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                     				 final BufferedImage image9 = screenshot9.getImage();
                     				 ImageIO.write(image9, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\6_ConfirmbookingFail.png"));
                     		               
                     		         Reporter.log("Actual status is:-" +status1);
                     		         Assert.assertFalse(false, "FAIL");
                     		         Reporter.log("Status Fail b'coz status are differ to expected..");
                     		         AssertJUnit.assertTrue("Status Fail b'coz status are differ to expected...", crsbkngpge.isDisplayed());
                     			     return;
                     	        }
                             
                                System.out.println("Actual status is:- "+ status1);
                                Reporter.log("Actual status is:- " + status1);
                              
                                final Screenshot screenshot76 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                                final BufferedImage image76 = screenshot76.getImage();
                                ImageIO.write(image76, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\16_ConfirmBooking.png"));
                                Thread.sleep(4000);
                              
                                System.out.println("Flight confirmed successfully..");
                              
                                Reporter.log("Flight confirmed successfully..");  // For displaying message on report
                                
                                long start79 = System.currentTimeMillis();  
                                Thread.sleep(10000);
                                long finish1119 = System.currentTimeMillis();
                                long totalTime1119 = finish1119 - start79; 
                                Reporter.log("Total Time for Confirm booking page to Admin default page load(Milisec) - "+totalTime1119); 
                                Thread.sleep(1000);
                              	 
                }     							 
                catch (Exception e) 
                {
        	          final Screenshot screenshot94 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                      final BufferedImage image94 = screenshot94.getImage();
                      ImageIO.write(image94, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\10_Paymentpage.png"));
              
                      Assert.assertFalse(false, "FAIL");
        	          Reporter.log("Something went wrong...");
        	          AssertJUnit.assertTrue("Something went wrong...", crsbkngpge.isDisplayed());
        	          throw(e);
			      }   
                
                    driver.get("https://localhost/odyssey/admin/default.aspx");
                    driver.navigate().refresh();
                    driver.manage().window().maximize();
                    
                    System.out.println("\n");
                    System.out.println("Admindefaultpage Logs..");
                    System.out.println("\n");
                    ExtractJSLogs();
                    
                    Thread.sleep(100);
                    
                      final Screenshot screenshot11 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
         		      final BufferedImage image11 = screenshot11.getImage();
         		      ImageIO.write(image11, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\17_Admindefaultpage.png"));
                    
                    Thread.sleep(7000);
                    
                    try
                    {
                        //Click on Manage
                         driver.findElement(By.className("manage_btn")).click();
                         Thread.sleep(2000);
                    }
                    catch(Exception e)
                    {
                    	e.getMessage();
                    }
                      try
                      {
                         //Agent Details
                         driver.findElement(By.cssSelector("[id*='trans_old_'] > td > div > div [class*='aagent_icon']")).click();
                         Thread.sleep(5000); 
                         
                         System.out.println("\n");
                         System.out.println("Agent details on admin defaultpage Logs..");
                         System.out.println("\n");
                         ExtractJSLogs();
                         
                         Thread.sleep(3000);
                         driver.switchTo().frame(driver.findElement(By.tagName("iframe")));
                         
                         //For middle name update
                         WebElement elm = driver.findElement(By.name("PaxMiddleName"));
                         elm.clear();
                         Thread.sleep(200); 
                         elm.click();
                         Thread.sleep(900); 
                         elm.sendKeys("N");
                         Thread.sleep(800); 
                        
                         WebElement elmt = driver.findElement(By.id("_ctl0_MainContent_BookingEditUC_SubmitBTN"));
                         elmt.click();
                         Thread.sleep(5000);
                      
                         driver.navigate().refresh();
                         
                         Thread.sleep(3000);
                       
                         driver.switchTo().defaultContent();
                         
                         Thread.sleep(1000);
                         System.out.println("\n");
                         System.out.println("Agent details updated on admin defaultpage Logs..");
                         System.out.println("\n");
                         ExtractJSLogs();
                         
                         Reporter.log("Agent details updated..");
                         
                         Thread.sleep(2000);
                              
                      }
                      catch(Exception e)
                      {
                    	  e.getMessage();
                    	  final Screenshot screenshot1 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                          final BufferedImage image1 = screenshot1.getImage();
                          ImageIO.write(image1, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\2_AgentdetailsNotUpdated.png"));
                          Thread.sleep(1000);
                          
                          Assert.assertFalse(false, "FAIL");
                          Reporter.log("Agent details not updated..");
                       //   AssertJUnit.assertTrue("Agent details not updated...", lgnpge.isDisplayed());
                       //   throw(e);
                      }
                         
                          driver.findElement(By.className("manage_btn")).click();
                          Thread.sleep(2000);

                      try
                      {
                          // For History
                    	     driver.findElement(By.className("history_icon")).click();
                    	     Thread.sleep(5000);
                    	  
                    	     driver.switchTo().frame(driver.findElement(By.tagName("iframe")));
              
                    	     Reporter.log("Booking History View..");
                    	     
                    	     driver.navigate().refresh();
                    	     
                    	     Thread.sleep(3000);
                    	   
                    	     driver.switchTo().defaultContent();
                    	     
                    	     Thread.sleep(1000);
                    	     System.out.println("\n");
                    	     System.out.println("Booking History updated on admin defaultpage Logs..");
                    	     System.out.println("\n");
                    	     ExtractJSLogs();
                    	     
                    	     Thread.sleep(2000);
                    	    	   
                      }
                      catch(Exception e)
                      {
                    	  e.getMessage();
                    	  
                    	     final Screenshot screenshot1 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                    	     final BufferedImage image1 = screenshot1.getImage();
                    	     ImageIO.write(image1, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\3_BookingHistory.png"));
                    	     Thread.sleep(2000);
                    	     
                    	     Assert.assertFalse(false, "FAIL");
                    	     Reporter.log("History not View..");
                      }
                      
                             driver.findElement(By.className("manage_btn")).click();
                             Thread.sleep(2000);
                      
                       try
                       {
                    	    
                    	 // For Payment Details
                    	     driver.findElement(By.cssSelector("[id*='trans_old_'] > td > div > div [class*='paydetail_icon']")).click();
                    	     Thread.sleep(5000);
                    	  
                    	     driver.switchTo().frame(driver.findElement(By.tagName("iframe")));
                     	     
                    	/*     
                    	     // For the Destroy CC
                    	     driver.findElement(By.id("_ctl0_MainContent_MultiplePaymentRPT__ctl1_DestroyTPCCBTN")).click();
                    	     Thread.sleep(4000);
                    	*/   
                    	     Reporter.log("Payment details view..");
                    	     
                    	     driver.navigate().refresh();
                    	     
                    	     Thread.sleep(3000);
                    	   
                    	     driver.switchTo().defaultContent();
                    	     
                    	     Thread.sleep(2000);
                    	     System.out.println("\n");
                    	     System.out.println("Payment details view on admin defaultpage Logs..");
                    	     System.out.println("\n");
                    	     ExtractJSLogs();
                    	     
                    	     Thread.sleep(2000);
                    	     	   
                       }
                       catch(Exception e)
                       {
                    	   e.getMessage();
                    	   
                    	   final Screenshot screenshot1 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                    	   final BufferedImage image1 = screenshot1.getImage();
                    	   ImageIO.write(image1, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\4_PaymentDetails.png"));
                    	   Thread.sleep(1000);
                    	     
                    	   Assert.assertFalse(false, "FAIL");
                    	   Reporter.log("Payment details not view..");
                    	   
                       }

                       
                           driver.findElement(By.className("manage_btn")).click();
                           Thread.sleep(1000);

                     try
                     {
                      
                     // For Cross Check w/Supplier
                        driver.findElement(By.cssSelector("[id*='trans_old_'] > td > div > div [class*='crosscheck_icon']")).click();
                        Thread.sleep(5000); 

                        driver.switchTo().frame(driver.findElement(By.tagName("iframe")));
                      
                        Reporter.log("Cross check details view..");
                       
                        driver.navigate().refresh();
                       
                        Thread.sleep(4000);
                     
                        driver.switchTo().defaultContent();
                       
                        Thread.sleep(2000);
                        System.out.println("\n");
                        System.out.println("Cross check view on admin defaultpage Logs..");
                        System.out.println("\n");
                        ExtractJSLogs();
                       
                        Thread.sleep(2000);
                        
                     }
                     catch(Exception e)
                     {
                        e.getMessage();
                     
                        final Screenshot screenshot1 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                        final BufferedImage image1 = screenshot1.getImage();
                        ImageIO.write(image1, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\5_CrosscheckFail.png"));
                        Thread.sleep(2000);
                       
                        Assert.assertFalse(false, "FAIL");
                        Reporter.log("Cross check not view..");
                     
                     }
                     
                        driver.findElement(By.className("manage_btn")).click();
                        Thread.sleep(2000);

                     try
                     {
                        // For Send email
                   	     driver.findElement(By.cssSelector("[id*='trans_old_'] > td > div > div [class*='sendemail_icon']")).click();
                   	     Thread.sleep(5000);
                   	  
                   	     driver.switchTo().frame(driver.findElement(By.tagName("iframe")));
                     	     
                   	/*     
                   	    // For Send email
                   	     driver.findElement(By.id("_ctl0_MainContent_SendBTN")).click();
                     */
                   	     Reporter.log("Send email pop up View..");
                   	     
                   	     driver.navigate().refresh();
                   	     
                   	     Thread.sleep(4000);
                   	   
                   	     driver.switchTo().defaultContent();
                   	     
                   	     Thread.sleep(1000);
                   	     System.out.println("\n");
                   	     System.out.println("Send email pop up view on admin defaultpage Logs..");
                   	     System.out.println("\n");
                   	     ExtractJSLogs();
                   	     
                   	     Thread.sleep(2000);
                   	     	   
                     }
                     catch(Exception e)
                     {
                   	     e.getMessage();
                   	  
                   	     final Screenshot screenshot1 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                   	     final BufferedImage image1 = screenshot1.getImage();
                   	     ImageIO.write(image1, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\6_SendEmailFail.png"));
                   	     Thread.sleep(2000);
                   	     
                   	     Assert.assertFalse(false, "FAIL");
                   	     Reporter.log("Send email pop up not view..");
                     }
                     
                         driver.findElement(By.className("manage_btn")).click();
                         Thread.sleep(2000);

                    try
                    {
                       // For Rules
                   	     driver.findElement(By.cssSelector("[id*='trans_old_'] > td > div > div [class*='promo_icon']")).click();
                   	     Thread.sleep(5000);
                   	  
                   	     driver.switchTo().frame(driver.findElement(By.tagName("iframe")));
                    	    
                     /*	     	    
                   	    // For Applicable Rules
                   	     driver.findElement(By.cssSelector("#tabs > ul > li:nth-child(2) [class*='ui-tabs-anchor']")).click();
                   	     Thread.sleep(1500);
                   	     
                   	     File scr23 = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
                   	     org.codehaus.plexus.util.FileUtils.copyFile(scr23, new File("D:\\Ajit\\Script_SS\\AdminManage\\11_ApplicableRules.png")); 
                   	     Thread.sleep(2000);
                     */
                   	     Reporter.log("Rules pop up View for the Selected Rules and Applicable Rules...");
                   	     
                   	     driver.navigate().refresh();
                   	     
                   	     Thread.sleep(4000);
                   	   
                   	     driver.switchTo().defaultContent();
                   	     
                   	     Thread.sleep(1000);
                   	     System.out.println("\n");
                   	     System.out.println("Rules pop up view on admin defaultpage Logs..");
                   	     System.out.println("\n");
                   	     ExtractJSLogs();
                   	     
                   	     Thread.sleep(2000);
                   	     
                   	   
                    }
                    catch(Exception e)
                    {
                   	     e.getMessage();
                   	  
                   	     final Screenshot screenshot1 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                   	     final BufferedImage image1 = screenshot1.getImage();
                   	     ImageIO.write(image1, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\7_RulesFail.png"));
                   	     Thread.sleep(2000);
                   	     
                   	     Assert.assertFalse(false, "FAIL");
                   	     Reporter.log("Rules pop up not view..");
                    }
                    
                    driver.findElement(By.className("manage_btn")).click();
                    Thread.sleep(2000);

                 try
                 {
                     // For Transfer booking
                     if(driver.findElement(By.cssSelector("[id*='trans_old_'] > td > div > div [class*='transfer_icon']")).isDisplayed())
                     {
                         driver.findElement(By.cssSelector("[id*='trans_old_'] > td > div > div [class*='transfer_icon']")).click();
                         Thread.sleep(4000);
                     }
                         driver.switchTo().frame(driver.findElement(By.tagName("iframe")));
               	      
              	       // For transfer booking B2B To B2C
              	       driver.findElement(By.cssSelector("#MainForm > div > div > div > div.col-md-12.col-sm-12.col-xs-12.counters.bookings.no-padding > div > div > div > div > div > div:nth-child(6) > div > div:nth-child(2) > div > label.green > span")).click();
              	       Thread.sleep(1500);
              	       
              	       driver.findElement(By.id("_ctl0_MainContent_SubmitBTN")).click();
              	       Thread.sleep(4000);
                     
                          Reporter.log("Transfer booking successfully...");
               
                          driver.navigate().refresh();
               
                          Thread.sleep(4000);
                          
                          driver.switchTo().defaultContent();
                 	     
                 	        Thread.sleep(1000);
                 	        System.out.println("\n");
                 	        System.out.println("Transfer booking pop up view on admin defaultpage Logs..");
                 	        System.out.println("\n");
                 	        ExtractJSLogs();
                 	     
                 	        Thread.sleep(2000);


                 }
                 catch(Exception e)
                 {
                     e.getMessage();

                     final Screenshot screenshot1 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                     final BufferedImage image1 = screenshot1.getImage();
                     ImageIO.write(image1, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\9_TransferbookingFail.png"));
                     Thread.sleep(2000);
               
                     Assert.assertFalse(false, "FAIL");
                     Reporter.log("Transfer booking not successful..");
                 }
                      
                    try
                    {
                        //For E-Ticket from Manage(Admin)
                        driver.findElement(By.className("manage_btn")).click();
                        driver.findElement(By.className("editstat_icon")).click();
                        
                        System.out.println("\n");
                        System.out.println("Editstatus on admin defaultpage Logs..");
                        System.out.println("\n");
                        ExtractJSLogs();
                        
                        Thread.sleep(3000);
                        driver.switchTo().frame(driver.findElement(By.tagName("iframe")));
                        WebElement elmt = driver.findElement(By.id("_ctl0_MainContent_StatusSEL"));
                        elmt.click();
                        driver.findElement(By.xpath("//*[@id='_ctl0_MainContent_StatusSEL']/option[8]")).click();
                        driver.findElement(By.id("_ctl0_MainContent_SubmitBTN")).click(); 
                        driver.switchTo().defaultContent();
                        
                        Thread.sleep(1000);
                        System.out.println("\n");
                        System.out.println("Ticketed booking on admin defaultpage Logs..");
                        System.out.println("\n");
                        ExtractJSLogs();
                        
                        Thread.sleep(2000);
                        driver.navigate().refresh();
                        Thread.sleep(1000);
                        
                    }
                    catch(Exception e)
                    {
                           Reporter.log("Status Ticketed fail..");
                         
                           System.out.println("\n");
                           System.out.println("Ticketed status fail on admin defaultpage Logs..");
                           System.out.println("\n");
                           ExtractJSLogs();
                      
                             final Screenshot screenshot12 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                    		 final BufferedImage image12 = screenshot12.getImage();
                    		 ImageIO.write(image12, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\12_ETicketedstatusFail.png"));
                         
                         driver.findElement(By.xpath("/html/body/div[6]/div[1]/button/span[1]")).click();
                         AssertJUnit.assertTrue("Status fail for E-Ticketed...", hldncnfrm.isDisplayed());
                         
                    }

                        //For Check condition E-Ticketed
                        String status3 = driver.findElement(By.xpath("//*[@id='gridOld']/div[2]/table/tbody/tr[1]/td[2]/strong")).getText(); 
                        
                    if(status3.toLowerCase().trim().matches("ticketed"))
                    {
                    	    System.out.println("Status Pass..");
                    	    Assert.assertTrue(true, "PASS");
                    	    Reporter.log("Status Pass..");
                    }
                    else
                    {
                    	System.out.println("Status Fail..");
                    					
                            final Screenshot screenshot14 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                    		final BufferedImage image14 = screenshot14.getImage();
                    		ImageIO.write(image14, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\13_ETicketedStatusFail.png"));
                     
                        Assert.assertFalse(false, "FAIL");
                        Reporter.log("Ticketed status:- FAIL");
                        System.out.println("Booking ticketed fail..");
                        driver.findElement(By.xpath("/html/body/div[6]/div[1]/button/span[1]")).click();
                    	     
                     }

                             System.out.println("Actual status is:- "+ status3);
                             Reporter.log("Actual status is:- " + status3);
                             Reporter.log("Booking Ticketed successfully..");
                              
                              final Screenshot screenshot15 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                    		  final BufferedImage image15 = screenshot15.getImage();
                    		  ImageIO.write(image15, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\18_FlightETicketed.png"));
                               
                              Thread.sleep(5000);
                        

                    //For Cancel booking
                    driver.get("https://localhost/odyssey/admin/default.aspx");
                    driver.navigate().refresh();
                    driver.manage().window().maximize();

                    Thread.sleep(4000);
                 try
                 {
                    driver.findElement(By.className("manage_btn")).click();
                    Thread.sleep(200);
                    driver.findElement(By.xpath("//a[@class='cancel_icon']")).click();
                    driver.switchTo().frame(driver.findElement(By.tagName("iframe")));
                    WebElement elm = driver.findElement(By.id("_ctl0_MainContent_CancelBookingBTN"));
                    elm.click();

                      Thread.sleep(100);
                    	
                    Alert alert=driver.switchTo().alert();
                    alert.accept();

                    System.out.println("\n");
                    System.out.println("Cancelbooking on admin defaultpage Logs..");
                    System.out.println("\n");
                    ExtractJSLogs();
                    	
                      Thread.sleep(200);

                              final Screenshot screenshot16 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                    	      final BufferedImage image16 = screenshot16.getImage();
                    	      ImageIO.write(image16, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\10_Cancelbookingpopup.png"));

                    driver.switchTo().defaultContent();
                    Thread.sleep(6000);
                    driver.navigate().refresh();

                 }catch(Exception e)
                 {
                       System.out.println("\n");
                     System.out.println("Cancel booking fail on admin defaultpage Logs..");
                     System.out.println("\n");
                     ExtractJSLogs();

                         final Screenshot screenshot17 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                    	 final BufferedImage image17 = screenshot17.getImage();
                    	 ImageIO.write(image17, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\8_CancelbookingFail.png"));
                           
                     Assert.assertFalse(false, "FAIL");
                     Reporter.log("Booking cancel failed...");
                     AssertJUnit.assertTrue("Booking cancel failed...", hldncnfrm.isDisplayed());
                     return;
                     
                 }


                     Thread.sleep(7000);
                     
                     // For the verify cancel condition
                     String status2 = driver.findElement(By.xpath("//*[@id='gridOld']/div[2]/table/tbody/tr[1]/td[2]/strong")).getText(); 
                                       
                     if(status2.toLowerCase().trim().matches("cancelled"))
                     {
                    	    System.out.println("Status Pass..");
                    	    Assert.assertTrue(true, "PASS");
                    	    Reporter.log("Status Pass..");
                     }
                     else
                     {
                    			 System.out.println("Status Fail..");
                    			 System.out.println("Actual status is:- "+ status2);
                    			
                    		     final Screenshot screenshot18 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                    		 	 final BufferedImage image18 = screenshot18.getImage();
                    		 	 ImageIO.write(image18, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPCError\\9_CancelbookingstatusFail.png"));
                    	               
                    	         Reporter.log("Actual status is:- " + status2);
                    	         Assert.assertFalse(false, "FAIL");
                    	         Reporter.log("Cancel status fail..");
                    	         AssertJUnit.assertTrue("Cancel Status Fail...", hldncnfrm.isDisplayed());
                    		     return;
                     }

                       System.out.println("Actual status is:- "+ status2);
                       Reporter.log("Actual status is:- " + status2);
                     
                             final Screenshot screenshot19 = new AShot().shootingStrategy(new ViewportPastingStrategy(500)).takeScreenshot(driver);
                    	     final BufferedImage image19 = screenshot19.getImage();
                    	     ImageIO.write(image19, "PNG", new File("D:\\Ajit\\Script_SS\\LocalBPC\\12_Bookingcancelled.png"));
                     
                       System.out.println("Booking cancelled successfully..");
                     
                       Reporter.log("Booking cancelled successfully..");

                       Thread.sleep(4000);

                         
                    }

}

@DataProvider
public String[][] Authentications() throws Exception
{
	 
	     String[][] testObjArray = LocalCruiseUtils.getTableArray("D:\\Ajit\\Automation\\Workspace\\Odysseus_Product\\src\\main\\java\\testData\\LocalCruiseData.xlsx","Sheet1");
	     return testObjArray;
	     
}

@AfterClass
public void closeBrowser() throws InterruptedException
{
	 
	   /*
	          if(driver!=null) 
	          {
		           System.out.println("Closing the browser");
		           driver.quit();
	          }   
       */
}
	
}
